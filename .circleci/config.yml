# .circleci/config.yml
version: 2.1
orbs:
  macos: circleci/macos@2
  maven: circleci/maven@1.4.0

jobs:
  iOS:
    macos:
      xcode: 14.1.0
    environment:
      JAVA_HOME: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home
    steps:
      - checkout
      - run: |
          xcrun simctl create TestiPhoneX com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-16-1 > deviceid.txt
      - run:
          name: Starting simulator in background
          command: DEVICEUUID=`cat deviceid.txt` && echo $DEVICEUUID && xcrun simctl boot $DEVICEUUID
          background: true
      - run:
          name: Node Version
          command: |
            nvm install v16.18.1 && nvm alias default 16.18.1
      - run:
          name: Install Appium and Run iOS Test
          command: |
            nvm install v16.18.1 && nvm alias default 16.18.1
            brew install --cask homebrew/cask-versions/adoptopenjdk8
            export PATH=$JAVA_HOME/bin:$PATH 
            brew install maven
            node -v 
            npm install -g appium@next
            appium -v
            appium driver install xcuitest
            appium plugin install --source npm appium-device-farm
            appium plugin list
            appium driver list
            Platform='iOS' CONFIG_FILE='./configs/iOSConfig.properties' mvn clean -Dtest=Runner test -Dcheckstyle.skip

  Android:
    machine:
      image: android:202102-01
    # To optimize build times, we recommend "large" and above for Android-related jobs
    resource_class: large
    steps:
      - checkout
      - run:
          name: Create avd
          command: |
            SYSTEM_IMAGES="system-images;android-29;default;x86"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"
      - run:
          name: Launch emulator 1
          command: |
            emulator -avd test -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true

      - run:
          name: wait for emulator
          command: adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - run:
          name: Install Appium and Run Android Test
          command: |
            nvm install v16.18.1 && nvm alias default 16.18.1 
            node -v 
            npm install -g appium@next
            appium -v
            appium driver install uiautomator2
            appium plugin install --source npm appium-device-farm
            appium plugin list
            appium driver list
            Platform='android' CONFIG_FILE='./configs/config.properties' mvn clean -Dtest=Runner test -Dcheckstyle.skip

  AndroidUBUNTU:
    machine:
      image: ubuntu-2204:2022.10.2
    resource_class: large
    environment:
      ANDROID_HOME: /home/circleci/android-sdk
      ANDROID_SDK_ROOT: $ANDROID_HOME
      CMDLINE_TOOLS_ROOT: ${ANDROID_HOME}/cmdline-tools/latest/bin
      ADB_INSTALL_TIMEOUT: 120
      PATH: ${ANDROID_HOME}/emulator:${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/platform-tools/bin:${PATH}
    steps:
      - checkout
      - run: apt list --installed
      - run: mvn --version
      - run: java -version
      - run: node --version
      - run: npm --version
      - run:
          name: Install Android stuffs
          command: |
            SDK_TOOLS_URL="https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip" && \
            mkdir -p ${ANDROID_HOME}/cmdline-tools && \
            mkdir ${ANDROID_HOME}/platforms && \
            mkdir ${ANDROID_HOME}/ndk && \
            wget -O /tmp/cmdline-tools.zip -t 5 "${SDK_TOOLS_URL}" && \
            unzip -q /tmp/cmdline-tools.zip -d ${ANDROID_HOME}/cmdline-tools && \
            rm /tmp/cmdline-tools.zip && \
            mv ${ANDROID_HOME}/cmdline-tools/cmdline-tools ${ANDROID_HOME}/cmdline-tools/latest

            echo y | ${CMDLINE_TOOLS_ROOT}/sdkmanager "tools" && \
            echo y | ${CMDLINE_TOOLS_ROOT}/sdkmanager "platform-tools" && \
            echo y | ${CMDLINE_TOOLS_ROOT}/sdkmanager "build-tools;33.0.1"

            echo y | ${CMDLINE_TOOLS_ROOT}/sdkmanager "platforms;android-33" && \
            echo y | ${CMDLINE_TOOLS_ROOT}/sdkmanager "platforms;android-32"

            # Install some useful packages
            echo y | ${CMDLINE_TOOLS_ROOT}/sdkmanager "extras;android;m2repository" && \
            echo y | ${CMDLINE_TOOLS_ROOT}/sdkmanager "extras;google;m2repository" && \
            echo y | ${CMDLINE_TOOLS_ROOT}/sdkmanager "extras;google;google_play_services" && \
            sudo gem install fastlane --version 2.208.0 --no-document
      - run: echo $ANDROID_HOME
      - run: adb devices
  BrowserStack:
      machine:
       image: android:202102-01
    # To optimize build times, we recommend "large" and above for Android-related jobs
      resource_class: large
      steps:
       - checkout
       - run:
          name: Install Appium and Run Android Test
          command: |
            nvm install v16.18.1 && nvm alias default 16.18.1 
            node -v 
            npm install -g appium@next
            appium -v
            appium plugin install --source npm appium-device-farm
            appium plugin list
            appium driver list
            Platform='android' BS_USERNAME=$user_bs BS_PASSWORD=$pass_bs CONFIG_FILE='./configs/bs_config.properties' mvn clean -Dtest=Runner test -Dcheckstyle.skip

workflows:
  build:
    jobs:
      - AndroidUBUNTU